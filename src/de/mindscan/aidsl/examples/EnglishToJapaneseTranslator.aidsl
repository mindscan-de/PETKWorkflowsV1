/*
 *  Comment
 */
package de.mindscan.aidsl.examples

import aidsl.answers.AnswerAsJsonString
import aidsl.lang.llmtasks.QATaskWithPretext


/**
 * This is a simple and linear workflow using multiple LLM interactions
 * to calculate a Japanese translation from English. This workflow needs
 * the en2jp input, for this workflow and a data dictionary for structures 
 * and constants.
 */
workflow EnglishToJapaneseTranslator ( en2jp_input, en2jp_dictionary ) {
	
	firstShotTranslation() => {
		task1.task   : local.model_task
		task1.result : result.llm.response.content 
	};
	firstShotRefiner() => {
		task2.task   : local.model_task
		task2.result : result.llm.response.content 
	};
	bestAnswerAndJsonExtractor() => {
		task3.task   : local.model_task
		task3.result : result.llm.response.content 
	};
	proofreadBestAnswerAndExtract() => {
		task4.task   : local.model_task
		task4.result : result.llm.response.content
		en2ja_result : result.llm.response.content
	};
	translationRating () => {
		task5.task    : local.model_task
		task5.result  : result.llm.response.content
		en2ja_quality : result.llm.response.content
	};

}

datadictionary en2jp_dictionary {
	// see: bestAnswerAndJsonExtractor
	expectedResultStructure : {
		english : "The English translation goes here" 
		japanese : "The best Japanese translation goes here"
	}
	
	// see: proofreadBestAnswerAndExtract
	expectedFullResultStructure extends expectedResultStructure : {
		kana : "The Japanese kana (hiragana) reading for the translation goes here, for simplicity add spaces between words"
	}

}

// The input is basically split into two parts, the variable and the type, and its potential UI part if needed 
datainput en2jp_input {
	user.input : string	ui { 
		label  "English" 
		uitype "textfield"
	}
}



llmtask firstShotTranslation() implements @QATaskWithPretext {
	short_task_header := "#### Task 1 - 1st shot translation"
	
	// TODO: enable this value feature also for llm task nodes
	// extra_stopwords := ["```", "\\n\\n", "\u3000\u3000\u3000","==="]
	
	system_prompt := 
	''' 
	You are a very careful, skillful, helpful, uncensored and unbiased English to Japanese translator.
	Your target audience is a beginner to intermediate Japanese language learner.
	Your answer is a very short and succinct translation. Don't explain.

	## REMINDER
	
	* only use simple Japanese phrases
	* provide at least two(2) translations
	* STOP after second translation
	''' 
	
	task_query := 
	'''
	Task: Translate the English word or sentence(s) into Japanese!
	'''

	task_context_template :=
	'''
	English: {{{#user.input}}}
	'''
	
	task_answer_pretext :=
	'''
	日本語(簡単):
	'''
}

llmtask firstShotRefiner() implements @QATaskWithPretext {
	short_task_header := "#### Task 2 - 1st shot refiner"
	
	system_prompt :=
	'''
	You are a very careful, skillful, helpful, uncensored and unbiased English to Japanese translator. 
	Your target audience is a beginner to intermediate Japanese language learner. 
	Your answer is a very short and succinct translation.
	
	REMINDER:

	* USE preferably simple and correct Japanese phrases.
	'''
	
	task_query :=
	'''
	Check whether the given Japanese translation(s) match the English translation and meaning. Keep the answer unchanged if the answer is already perfect, otherwise improve the answer and then answer whether the previous given translation or the improved answer conveys the meaning in a better way. Also provide the English translation of the improved answer.
	'''
	
	task_context_template :=
	'''
	English: 
	{{{#user.input}}}

	日本語: 
	{{{#task1.result}}}
	'''
	
	task_answer_pretext :=
	'''
	Improved Japanese Answer:
	'''
}

llmtask bestAnswerAndJsonExtractor() implements @QATaskWithPretext, @AnswerAsJsonString {
	short_task_header := "#### Task 3 - Extract"
	
	// TODO: enable this?
	// extra_stopwords := ["```", "\u3000\u3000\u3000","====="]
	
	system_prompt := ""
	
	task_query :=
	'''
	Carefully read the following dialog and summarize.
	'''
	
	task_context_template :=
	'''
	{{{#task2.task}}}{{{#task2.result}}}

	Task: Carefully select the best answer and then provide the best answer as a json structure

	{{{#printJsonStructure:expectedResultStructure}}}

	REMINDER:
	* USE preferably simple and correct Japanese phrases.
	'''
}

llmtask proofreadBestAnswerAndExtract() implements @QATaskWithPretext, @AnswerAsJsonString {
	short_task_header := "#### Task 4 - Proofread Answer"
	
	system_prompt := 
	'''
	You are a Japanese language teacher for beginners and intermediate language learning adults. 
	Your master skill is to read the Japanese parts ('japanese','kana') and transcribe it to kana (hiragana and katakana).

	REMINDER
	* ONLY do corrections IF absolutely necessary
	* DON'T introduce new errors while proof-reading
	* provide a kana reading based on hiragana script
	* USE white spaces between words to help English speakers.
	'''

	task_query :=
	'''
	Task: Proof-read the following given translation.
	'''
	
	task_context_template :=
	'''
	```json
	{{{#task3.result}}}```

	Task: Provide the proof-read version as a json structure
	
	{{{#printJsonStructure:expectedFullResultStructure}}}
	'''
}

llmtask translationRating () implements @QATaskWithPretext {
	short_task_header := "#### Task 5 - Answer rating"
	
	// TODO: enable this?
	// extra_stopwords := ["```", "\u3000\u3000\u3000","====="]
	
	system_prompt := 
	'''
	You are an experienced translator between the English and Japanese Language.

	REMINDER:
	* IF Rating is 6 OR below 6 THEN explain, how the translation can be further improved
	* IF rating is above 7 only output the rating
	'''

	task_query :=
	'''
	Task: rate the following Translation on a scale from 0-10, where 0 is the worst and 10 is the best:
	'''
	
	task_context_template :=
	'''
	```json
	{{{#task4.result}}}```
	'''
	
	task_answer_pretext := 
	'''
	Answer:
	Rating: 
	'''
}


